import { apiSlice } from "../apiSlice"

const AUTH_URL = "/user"

export const authApiSlice = apiSlice.injectEndpoints({
    endpoints: (builder) => ({
        login: builder.mutation({
            query: (data) => ({
                url: `${AUTH_URL}/login`,
                method: "POST",
                body: data,
                credentials: "include",
            })
        }),

        register: builder.mutation({
            query: (data) => ({
                url: `${AUTH_URL}/register`,
                method: "POST",
                body: data,
                credentials: "include",
            })
        }),

        logout: builder.mutation({
            query: (data) => ({
                url: `${AUTH_URL}/logout`,
                method: "POST",
                credentials: "include",
            })
        }),

    })
});



export const { useLoginMutation, useRegisterMutation, useLogoutMutation } = authApiSlice;
// This line exports a custom hook useLoginMutation, which is automatically generated by Redux Toolkit Query based on the login endpoint defined earlier.This hook can be used in React components to execute the login mutation operation.



// 1. authApiSlice explain .................................

// This code creates an authentication API slice using the injectEndpoints method provided by Redux Toolkit Query.It defines an endpoint for the login operation:

//     login: This endpoint is created using builder.mutation(), indicating that it's a mutation operation (e.g., creating, updating, or deleting data).
// The query function specifies the details of the HTTP request for the login operation, including the URL, method, request body, and credentials.



